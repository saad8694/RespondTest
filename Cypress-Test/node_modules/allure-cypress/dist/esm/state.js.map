{"version":3,"file":"state.js","names":["DEFAULT_RUNTIME_CONFIG","getAllureState","state","Cypress","env","config","initialized","messages","testPlan","undefined","currentTest","isAllureInitialized","setAllureInitialized","getRuntimeMessages","setRuntimeMessages","value","enqueueRuntimeMessage","message","push","getAllureTestPlan","getCurrentTest","setCurrentTest","test","dropCurrentTest","getConfig"],"sources":["../../src/state.ts"],"sourcesContent":["import type { AllureSpecState, CypressMessage, CypressTest } from \"./model.js\";\nimport { DEFAULT_RUNTIME_CONFIG } from \"./utils.js\";\n\nexport const getAllureState = () => {\n  let state = Cypress.env(\"allure\") as AllureSpecState;\n  if (!state) {\n    state = {\n      config: DEFAULT_RUNTIME_CONFIG,\n      initialized: false,\n      messages: [],\n      testPlan: undefined,\n      currentTest: undefined,\n    };\n    Cypress.env(\"allure\", state);\n  }\n  return state;\n};\n\nexport const isAllureInitialized = () => getAllureState().initialized;\n\nexport const setAllureInitialized = () => {\n  getAllureState().initialized = true;\n};\n\nexport const getRuntimeMessages = () => getAllureState().messages;\n\nexport const setRuntimeMessages = (value: CypressMessage[]) => {\n  getAllureState().messages = value;\n};\n\nexport const enqueueRuntimeMessage = (message: CypressMessage) => {\n  getRuntimeMessages().push(message);\n};\n\nexport const getAllureTestPlan = () => getAllureState().testPlan;\n\nexport const getCurrentTest = () => getAllureState().currentTest;\n\nexport const setCurrentTest = (test: CypressTest) => {\n  getAllureState().currentTest = test;\n};\n\nexport const dropCurrentTest = () => {\n  getAllureState().currentTest = undefined;\n};\n\nexport const getConfig = () => getAllureState().config;\n"],"mappings":"AACA,SAASA,sBAAsB,QAAQ,YAAY;AAEnD,OAAO,IAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,IAAIC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAoB;EACpD,IAAI,CAACF,KAAK,EAAE;IACVA,KAAK,GAAG;MACNG,MAAM,EAAEL,sBAAsB;MAC9BM,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAEC,SAAS;MACnBC,WAAW,EAAED;IACf,CAAC;IACDN,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;EAC9B;EACA,OAAOA,KAAK;AACd,CAAC;AAED,OAAO,IAAMS,mBAAmB,GAAGA,CAAA,KAAMV,cAAc,CAAC,CAAC,CAACK,WAAW;AAErE,OAAO,IAAMM,oBAAoB,GAAGA,CAAA,KAAM;EACxCX,cAAc,CAAC,CAAC,CAACK,WAAW,GAAG,IAAI;AACrC,CAAC;AAED,OAAO,IAAMO,kBAAkB,GAAGA,CAAA,KAAMZ,cAAc,CAAC,CAAC,CAACM,QAAQ;AAEjE,OAAO,IAAMO,kBAAkB,GAAIC,KAAuB,IAAK;EAC7Dd,cAAc,CAAC,CAAC,CAACM,QAAQ,GAAGQ,KAAK;AACnC,CAAC;AAED,OAAO,IAAMC,qBAAqB,GAAIC,OAAuB,IAAK;EAChEJ,kBAAkB,CAAC,CAAC,CAACK,IAAI,CAACD,OAAO,CAAC;AACpC,CAAC;AAED,OAAO,IAAME,iBAAiB,GAAGA,CAAA,KAAMlB,cAAc,CAAC,CAAC,CAACO,QAAQ;AAEhE,OAAO,IAAMY,cAAc,GAAGA,CAAA,KAAMnB,cAAc,CAAC,CAAC,CAACS,WAAW;AAEhE,OAAO,IAAMW,cAAc,GAAIC,IAAiB,IAAK;EACnDrB,cAAc,CAAC,CAAC,CAACS,WAAW,GAAGY,IAAI;AACrC,CAAC;AAED,OAAO,IAAMC,eAAe,GAAGA,CAAA,KAAM;EACnCtB,cAAc,CAAC,CAAC,CAACS,WAAW,GAAGD,SAAS;AAC1C,CAAC;AAED,OAAO,IAAMe,SAAS,GAAGA,CAAA,KAAMvB,cAAc,CAAC,CAAC,CAACI,MAAM","ignoreList":[]}